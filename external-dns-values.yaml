# # Default values for external-dns.
# # This is a YAML-formatted file.
# # Declare variables to be passed into your templates.
provider: cloudflare 
namespace: external-dns


env:
- name: CF_API_KEY
  value: ""
- name: CF_API_EMAIL
  value: "lauro.salazar@outlook.com"



cloudflare:
## `CF_API_TOKEN` to set in the environment
##
# apiToken: ""
## `CF_API_KEY` to set in the environment
##
cloudflare_api_token: ""
## Use an existing secret with keys "cloudflare_api_token" or "cloudflare_api_key" defined.
## This ignores cloudflare.apiToken, and cloudflare.apiKey
##
# secretName:
## `CF_API_EMAIL` to set in the environment
##
email: "lauro.salazar@outlook.com"
## Enable the proxy feature of Cloudflare
# ##
# proxied: false
# image:
#   repository: k8s.gcr.io/external-dns/external-dns
#   # Overrides the image tag whose default is v{{ .Chart.AppVersion }}
#   tag: ""
#   pullPolicy: IfNotPresent

# imagePullSecrets: []

# nameOverride: ""
# fullnameOverride: ""

# commonLabels: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# rbac:
#   # Specifies whether RBAC resources should be created
#   create: true
#   additionalPermissions: []

# # Annotations to add to the Deployment
# deploymentAnnotations: {}

# podLabels: {}

# # Annotations to add to the Pod
# podAnnotations: {}

# shareProcessNamespace: false

# podSecurityContext:
#   fsGroup: 65534

securityContext:
  runAsNonRoot: true
  runAsUser: 65534
  readOnlyRootFilesystem: true
  capabilities:
    drop: ["ALL"]

# priorityClassName: ""

# terminationGracePeriodSeconds:

# serviceMonitor:
#   enabled: false
#   additionalLabels: {}
#   interval: 1m
#   scrapeTimeout: 10s



# livenessProbe:
#   httpGet:
#     path: /healthz
#     port: http
#   initialDelaySeconds: 10
#   periodSeconds: 10
#   timeoutSeconds: 5
#   failureThreshold: 2
#   successThreshold: 1

# readinessProbe:
#   httpGet:
#     path: /healthz
#     port: http
#   initialDelaySeconds: 5
#   periodSeconds: 10
#   timeoutSeconds: 5
#   failureThreshold: 6
#   successThreshold: 1

service:
  port: 7979
  annotations: {}

# extraVolumes: []

# extraVolumeMounts: []

# resources: {}

# nodeSelector: {}

# tolerations: []

# affinity: {}

# topologySpreadConstraints: []

# logLevel: info
# logFormat: text

# interval: 1m
# triggerLoopOnEvent: false

sources:
  - service
  - ingress

# policy: upsert-only

registry: txt
txtOwnerId: ""
txtPrefix: ""
txtSuffix: ""

# domainFilters: []



# extraArgs: []
